% This file was created with JabRef 2.9.2.
% Encoding: Cp1252

@ARTICLE{Fitzgerald2006200,
  author = {Fitzgerald, B.a d e and Hartnett, G.b f and Conboy, K.c g h i},
  title = {Customising agile methods to software practices at Intel Shannon},
  journal = {European Journal of Information Systems},
  year = {2006},
  volume = {15},
  pages = {200-213},
  number = {2},
  note = {cited By (since 1996)80},
  __markedentry = {[ekupiain:1]},
  abbrev_source_title = {Eur. J. Inf. Syst.},
  abstract = {Tailoring of methods is commonplace in the vast majority of software
	development projects and organisations. However, there is not much
	known about the tailoring and engineering of agile methods, or about
	how these methods can be used to complement each other. This study
	investigated tailoring of the agile methods, eXtreme programming
	(XP) and Scrum, at Intel Shannon, and involved experienced software
	engineers who continuously monitored and reflected on these methods
	over a 3-year period. The study shows that agile methods may individually
	be incomplete in supporting the overall development process, but
	XP and Scrum complement each other well, with XP providing support
	for technical aspects and Scrum providing support for project planning
	and tracking. The principles of XP and Scrum were carefully selected
	(only six of the 12 XP key practices were implemented, for example)
	and tailored to suit the needs of the development environment at
	Intel Shannon. Thus, the study refutes the suggestion that agile
	methods are not divisible or individually selectable but achieve
	their benefits through the synergistic combination of individual
	agile practices; rather, this study shows that an a la carte selection
	and tailoring of practices can work very well. In the case of Scrum,
	some local tailoring has led to a very committed usage by developers,
	in contrast to many development methods whose usage is limited despite
	being decreed mandatory by management. The agile practices that were
	applied did lead to significant benefits, including reductions in
	code defect density by a factor of 7. Projects of 6-month and 1-year
	duration have been delivered ahead of schedule, which bodes well
	for future ability to accurately plan development projects. Â© 2006
	Operational Research Society Ltd. All rights reserved.},
  affiliation = {University of Limerick, Castletroy, Limerick, Ireland; Intel Communications
	Europe, Shannon Industrial Estate, Shannon, Co.Clare, Ireland; Department
	of Accountancy and Finance, NUI Galway, Galway, Ireland; University
	of Limerick, Ireland; Frederick A Krehbiel II Department of Innovation
	Global Business and Technology, University of Limerick, Ireland;
	Intel's R and D Facility, Shannon, Ireland; NUI, Galway, Ireland;
	Chartered Institute of Management Accountants; University of Limerick,
	Ireland},
  author_keywords = {Agile methods; Intel; Method engineering; Method tailoring; Scrum;
	Software development; XP},
  correspondence_address1 = {Fitzgerald, B.; University of LimerickIreland; email: bf@ul.ie},
  document_type = {Article},
  doi = {10.1057/palgrave.ejis.3000605},
  file = {:Desktop\\Dropbox\\UQasar\\Agile Metric SLR\\Eetu\\Articles\\storage\\3FNUUMU8\\Fitzgerald et al. - 2006 - Customising agile methods to software practices at.pdf:PDF},
  issn = {0960085X},
  language = {English},
  references = {Abrahamsson, P., Salo, O., Ronkainen, J., Warsta, J., (2002) Agile
	Software Development Methods: Review and Analysis, , VTT Publications,
	Finland; Abrahamsson, P., Warsta, J., Siponen, M., Ronkainen, J.,
	New directions on agile methods: A comparative analysis (2003) Proceedings
	of 25th ICSE, , Portland, OR; Ambler, S.W., (2002) Agile Modeling:
	Best Practices for the Unified Process and Extreme Programming, ,
	John Wiley & Sons, New York; Aoyama, M., Agile software process model
	(1997) IEEE Computer, pp. 454-459. , Proceedings of the 21st International
	computer software and applications conference (COMPSAC 97), 11-15
	August, IEEE Computer Society Press, Washington, DC; Avison, D.,
	Wood-Harper, A., Information systems development research: An exploration
	of ideas in practice (1991) The Computer Journal, 34, pp. 98-112;
	Beck, K., (1999) Extreme Programming Explained, , Addison-Wesley,
	Reading, MA; Beck, K., (2000) Extreme Programming Explained: Embrace
	Change, , Addison-Wesley, Reading, MA; Benbasat, I., Goldstein, D.,
	Mead, M., The case research strategy in studies of information systems
	(1987) MIS Quarterly, 11 (3), pp. 369-386; Boehm, B., (1984) Models
	and Metrics for Software Management and Engineering, , IEEE Computer
	Society Press, NY; Boehm, B., A spiral model of software development
	and maintenance (1988) IEEE Computer, 21, pp. 61-72; Boehm, B., Get
	ready for agile methods, with care (2002) IEEE Computer, 35 (1),
	pp. 64-69; Bowers, J., May, J., Melander, E., Baarman, M., Ayoob,
	A., Tailoring Xp for large mission critical software development
	(2002) XP/Agile Universe, , (WELLS D and WILLIAMS L, Eds), Springer,
	Chicago, IL; Brooks, F., No silver bullet: Essence and accidents
	of software engineering (1987) IEEE Computer, 20 (4), pp. 10-19;
	Chae, B., Scott Poole, M., The surface of emergence in systems development:
	Agency, institutions, and large-scale information systems (2005)
	European Journal of Information Systems, 14 (1), pp. 19-36; Coad,
	P., De Luca, J., Lefebre, E., (1999) Java Modelling in Color, , Prentice
	Hall, Englewood Cliffs, NJ; Cockburn, A., (2001) Agile Software Development,
	, Addison-Wesley, Reading, MA; Constantine, L., Methodological agility
	(2001) Software Development, pp. 67-69. , June; Cunningham, W., Episodes:
	A pattern language of competitive development (1995) Pattern Languages
	of Program Design, , (KERTH N, KOPLIEN J and VLISSIDES J, Eds) Addison-Wesley,
	Reading, MA; Demarco, T., (1982) Controlling Software Projects: Management
	Measurement and Estimation, , Prentice-Hall, Englewood Cliffs, NJ;
	Doherty, N., King, M., An investigation of the factors affecting
	the successful treatment of organisational issues in systems development
	projects (2001) European Journal of Information Systems, 10, pp.
	147-160; Drobka, J., Noftz, D., Raghu, R., Piloting Xp on four mission
	critical projects (2004) IEEE Software, 21, pp. 70-75; Eisenhardt,
	K., Building theory from case study research (1989) Academy of Management
	Review, 14, pp. 532-550; Fitzgerald, B., The systems development
	dilemma; whether to adopt formalised systems development methodologies
	or not? (1994) Proceedings of the Second European Conference on Information
	Systems, , (BAETS W, Ed), Nijenrode University Press, Holland; Fitzgerald,
	B., Formalised systems development methodologies: A critical perspective
	(1996) Information Systems Journal, 6, pp. 3-23; Fitzgerald, B.,
	An empirical investigation into the adoption of systems development
	methodologies (1998) Information and Management, 34, pp. 317-328;
	Fitzgerald, B., Systems development methodologies; the problem of
	tenses (2000) Information Technology and People, 13, pp. 13-22; Fitzgerald,
	B., Russo, N., O'Kane, T., Software development method tailoring
	at motorola (2003) Communications of the ACM, 46, pp. 64-70; Fowler,
	M., Put your process on a diet (2000) Software Development, 8 (12),
	pp. 32-36; Fowler, M., Highsmith, J., The agile manifesto (2001)
	Software Development, , August; Glass, R., (1991) Software Conflict;
	Essays on the Art and Science of Software Engineering, , Yourdon
	Press, Prentice Hall, Englewood Cliffs, NJ; Hammersley, M., Comm,
	R., Introduction (2000) Case Study Method, , (COMM R, HAMMERSLEY
	M and FOSTER P, Eds), Sage, London; Harmesen, F., Brinkkemper, S.,
	Oei, H., Situational method engineering for is project approaches
	(1994) Methods and Associated Tools for the Is Life Cycle, , (VERRIJN-STUART
	A and OLLE T, Eds), North-Holland, Amsterdam; Hedin, G., Bendix,
	L., Magnusson, B., Introducing software engineering by means of extreme
	programming (2003) Proceedings of 25th ICSE, , Portland, OR; Hidding,
	G., Method engineering: Experiences in practice (1996) Method Engineering:
	Principles of Method Construction and Tool Support, , (BRINKKEMPER
	SKL and WELKE R, Eds), Kluwer, London; Highsmith, J., (1999) Adaptive
	Software Development, , Dorset House, NY; Highsmith, J., Cockburn,
	A., Agile software development: The business of innovation (2001)
	IEEE Computer, 34 (9), pp. 120-122; Iivari, J., A methodology for
	is development as organisational change (1989) Systems Development
	for Human Progress, , (KLEIN H and KUMAR K, Eds) North-Holland, Amsterdam;
	Jacobson, I., A resounding yes to agile processes - But also to more
	(2002) Cutter IT Journal, 15, pp. 18-24; Jeffries, R., Anderson,
	A., Hendrickson, C., (2000) Extreme Programming Installed, , Addison-Wesley,
	Reading, MA; Kruchten, P., (2000) The Rational Unified Process: An
	Introduction, , Addison-Wesley-Longman, Boston, MA; Kumar, K., Welke,
	R.J., Methodology engineering; a proposal for situation-specific
	methodology construction (1992) Challenges and Strategies for Research
	in Systems Development, , (COTTERMAN W and SENN J, Eds), John Wiley
	& Sons Ltd, Washington; Lee, A., Baskerville, R., Generalising generalisabillty
	in information systems research (2003) Information Systems Research,
	14, pp. 221-243; Lee, A., A scientific methodology for MIS case studies
	(1989) M/S Quarterly, 13, pp. 33-50; Lee, G., Xia, W., The ability
	of information systems development project teams to respond to business
	and technology changes: A study of flexibility measures (2005) European
	Journal of Information Systems, 14, pp. 75-92; Linstone, H., Turoff,
	M., Introduction (1975) The Delphi Method: Techniques and Applications,
	, (LINSTONE H and TUROFF M, Eds), Addison-Wesley, Reading, MA; Lycett,
	M., Paul, R., Information systems development: A perspective on the
	challenge of evolutionary complexity (1999) European Journal of Information
	Systems, 8, pp. 127-135; Marshall, C., Rossman, G., (1989) Designing
	Qualitative Research, , Sage Publications, California; Mcbreen, P.,
	(2003) Questioning Extreme Programming, , Addison-Wesley, Boston,
	MA; Mintzberc, H., (1979) The Structuring of Organisations, , Prentice-Hall,
	Englewood Cliffs, NJ; Muller, M., Tichy, W., Extreme programming
	in a university environment (2001) Proceedings of 23rd ICSE, , Toronto,
	Canada; Paulk, M., Extreme programming from a CMM perspective (2001)
	IEEE Software, 18 (6), pp. 1-8; Poppendieck, M., Lean programming
	(2001) Software Development Magazine, 9, pp. 71-75; Sarker, S., Sahay,
	S., Implications of space and time for distributed work: An interpretive
	study of US-Norwegian systems development teams (2004) European Journal
	of Information Systems, 13, pp. 3-20; Schwaber, K., Beedle, M., (2002)
	Agile Software Development with Scrum, , Prentice-Hall, Upper Saddle
	River, NJ; Silverman, D., Qualitative research: Meaning or practice
	(1998) Information Systems Journal, 8, pp. 3-20; Stapleton, J., (1997)
	DSDM; Dynamic Systems Development Method, , Addison Wesley, Harlow,
	England; Stephens, M., Rosenberg, D., (2003) Extreme Programming
	Refactored, , Apress, NY, ISBN 1-59059-096-1; Stotts, D., Williams,
	L., Nacappan, N., Baheti, P., Jen, D., Jackson, A., Virtual teaming:
	Experiments and experiences with distributed pair programming (2003)
	Extreme Programming/Agile Universe 2003, pp. 129-141. , (MAURER F
	and WELLS D, Eds), Springer; Trauth, E., O'Connor, B., A study of
	the interaction between information, technology and society (1991)
	Information Systems Research: Contemporary Approaches and Emergent
	Traditions, , (NISSEN H, KLEIN H and HIRSCHHEIM R, Eds), Elsevier,
	North Holland; Travers, M., (2001) Qualitative Research Through Case
	Studies, , Sage, London; Walker, R., (1988) Applied Qualitative Research,
	, Hampshire, Gower; Walsham, G., The emergence of interpretivism
	in is research (1995) Information Systems Research, 6, pp. 376-394;
	Walsham, G., Interpretive case studies in is research: Nature and
	method (1995) European Journal of Information Systems, 4, pp. 74-81;
	Yin, R., (2003) Case Study Research: Design and Methods, , SAGE Publications,
	Thousand Oaks, CA},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-33745794661&partnerID=40&md5=217cdde6a358d024afdd831891006bce}
}

@CONFERENCE{Hartmann2006126,
  author = {Hartmann, D. and Dymond, R.},
  title = {Appropriate agile measurement: Using metrics and diagnostics to deliver
	business value},
  year = {2006},
  volume = {2006},
  pages = {126-131},
  address = {Minneapolis, MN},
  note = {cited By (since 1996)6; Conference of org.apache.xalan.xsltc.dom.DOMAdapter@4c916ae
	; Conference Date: org.apache.xalan.xsltc.dom.DOMAdapter@2deffbf6
	Through org.apache.xalan.xsltc.dom.DOMAdapter@6686eb09; Conference
	Code:69553},
  abbrev_source_title = {Proc. AGILE Conf.},
  abstract = {Agile Software Development continually measures both our product and
	the process used to create it, to allow improvement. With increased
	popularity, more risk-averse groups are being drawn to Agile, bringing
	with them modes of evaluation incompatible with Agile values and
	principles. These outmoded metrics drive dysfunctional behaviors
	which threaten the integrity of an emerging Agile culture. This paper
	collects some of the current thinking on appropriate Agile metrics,
	and proposes simple tools for use by teams or organizations. The
	intention of these tools is to foster dialogue about the appropriateness
	of metrics in a given context, and thereby to encourage measurements
	more congruent with the objectives of Agile teamwork. Â© 2006 IEEE.},
  art_number = {1667571},
  document_type = {Conference Paper},
  doi = {10.1109/AGILE.2006.17},
  isbn = {0769525628; 9780769525624},
  journal = {Proceedings - AGILE Conference, 2006},
  keywords = {Industrial management; Risk management; Societies and institutions;
	Software engineering, Agile culture; Agile teamwork; Business values,
	Agile manufacturing systems},
  language = {English},
  references = {Andersen, D.J., Schragenheim, E., (2003) Agile Management for Software
	Engineering: Applying the Theory of Constraints for Business Results,
	, Prentice Hall; Cohn, M., (2006) Agile Estimating and Planning,
	, Prentice Hall; Collins, J., (2001) Good to Great: Why Some Companies
	Make the Leap... and Others Don't, , Collins; Goldratt, E.M., (1990)
	The Haystack Syndrome - Sifting Information Out of the Data Ocean,
	, North River Press; Manns, M.L., Rising, L., (2004) Fearless Change:
	Patterns for Introducing New Ideas, , Addison-Wesley Professional;
	Poppendieck, M., (2003) Measure UP, , http://www.poppendieck.com/measureup.htm,
	retrieved Dec. 26, 2005 from; Poppendieck, M., Poppendieck, T., (2003)
	Lean Software Development: An Agile Toolkit, , Addison Wesley Professional;
	Womack, J.P., Jones, D.T., (2003) Lean Thinking: Banish Waste and
	Create Wealth in Your Corporation, Revised and Updated, , Free Press;
	Berteig, M., (2005) Appropriate Metrics, , http://www.agileadvice.com/archives/2005/05/appropriate_met.html,
	Retrieved Dec 15, 2005 from; Moore, G.A., (2002) Crossing the Chasm,
	, Collins; Open Space, A.D.C., http://fitnesse.org/ AdcOpenSpace.WhatAreAgileMetrics,
	Retrieved Dec 15, 2005 from},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-34247582998&partnerID=40&md5=b4420398fe4e0c5b87c37225bba43eae}
}

@ARTICLE{Layman2006654,
  author = {Layman, L.a and Williams, L.a and Cunningham, L.b },
  title = {Motivations and measurements in an agile case study},
  journal = {Journal of Systems Architecture},
  year = {2006},
  volume = {52},
  pages = {654-667},
  number = {11},
  note = {cited By (since 1996)12},
  abbrev_source_title = {J Syst Archit},
  abstract = {With the recent emergence of agile software development technologies,
	the software community is awaiting sound, empirical investigation
	of the impacts of agile practices in a live setting. One means of
	conducting such research is through industrial case studies. There
	are a number of influencing factors that contribute to the success
	of such a case study. In this paper, we describe a case study performed
	at Sabre Airline Solutions TM evaluating the effects of adopting
	Extreme Programming (XP) practices with a team that had characteristically
	plan-driven risk factors. We compare the team's business-related
	results (productivity and quality) to two published sources of industry
	averages. Our case study found that the Sabre team yielded above-average
	post-release quality and average to above-average productivity. We
	discuss our experience in conducting this case study, including specifics
	of how data was collected, the rationale behind our process of data
	collection, and what obstacles were encountered during the case study.
	We identify four factors that potentially impact the outcome of industrial
	case studies: availability of data, tool support, cooperative personnel
	and project status. Recognizing and planning for these factors is
	essential to conducting industrial case studies. Â© 2006 Elsevier
	B.V. All rights reserved.},
  affiliation = {North Carolina State University, Campus Box 8206, Raleigh, NC 27695,
	United States; Clarke College, 1550 Clarke Drive, Dubuque, IA 52001,
	United States},
  author_keywords = {Agile software development; Case study; Extreme programming; Software
	engineering},
  coden = {JSARF},
  correspondence_address1 = {Layman, L.; North Carolina State University, Campus Box 8206, Raleigh,
	NC 27695, United States; email: lmlayma2@ncsu.edu},
  document_type = {Article},
  doi = {10.1016/j.sysarc.2006.06.009},
  issn = {13837621},
  keywords = {Agile practices; Agile software development; Case study; Extreme programming,
	Competitive intelligence; Computer programming; Electronic communities;
	Productivity; Project management; Quality control; Risk assessment,
	Software engineering},
  language = {English},
  references = {Basili, V., Shull, F., Lanubile, F., Building knowledge through families
	of experiments (1999) IEEE Transactions on Software Engineering,
	25, pp. 456-473; Beck, K., (2000) Extreme Programming Explained:
	Embrace Change, , Addison-Wesley, Reading, MA; Beck, K., Fowler,
	M., (2001) Planning Extreme Programming, , Addison-Wesley, Boston,
	MA; Boehm, B., Turner, R., (2003) Balancing Agility and Discipline:
	A Guide for the Perplexed, , Addison Wesley; El-Emam, K., Finding
	success in small software projects (2003) Agile Project Management,
	4; Fenton, N.E., Pfleeger, S.L., (1998) Software Metrics: A Rigorous
	and Practical Approach, , Brooks/Cole Pub Co., Boston, MA; Jones,
	C., (2000) Software Assessments, Benchmarks, and Best Practices,
	, Addison Wesley, Boston, MA; Kan, S., (2003) Metrics and Models
	in Software Quality Engineering. second ed., , Addison Wesley, Boston,
	MA; Kemerer, C.F., Reliability of function point measurement: a field
	experiment (1993) Communications of the ACM, 36, pp. 85-97; Kitchenham,
	B., (1996) Software Metrics: Measurement for Software Process Improvement,
	, Blackwell, Cambridge, MA; Kitchenham, B., Pickard, L., Pfleeger,
	S.L., Case studies for method and tool evaluation (1995) IEEE Software,
	12, pp. 52-62; Kitchenham, B.A., Pfleeger, S.L., Pickard, L.M., Jones,
	P.W., Hoaglin, D.C., El Emam, K., Rosenberg, J., Preliminary guidelines
	for empirical research in software engineering (2002) IEEE Transactions
	on Software Engineering, 28, pp. 721-733; Maurer, F., Martel, S.,
	Extreme programming: rapid development for web-based applications
	(2002) IEEE Internet Computing, 6, pp. 86-90; Potts, C., Software
	engineering research revisited (1993) IEEE Software, 10, pp. 19-28;
	Yin, R.K., (2003) Case Study Research: Design and Method, 5. , Sage
	Publications, Thousand Oaks, CA; Zelkowitz, M.V., Wallace, D.R.,
	Experimental models for validating technology (1998) IEEE Computer,
	31, pp. 23-31},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-33749642083&partnerID=40&md5=f85ed15e1a0a4c77a9ea27740c487803}
}

@CONFERENCE{Nagarajan2003453,
  author = {Nagarajan, S.V. and Garcia, O. and Croll, P.R.},
  title = {Extreme testing practice in extreme programming (XP)},
  year = {2003},
  editor = {Hamza M.H.},
  volume = {7},
  pages = {453-458},
  address = {Marina del Rey, CA},
  note = {cited By (since 1996)0; Conference of org.apache.xalan.xsltc.dom.DOMAdapter@537e5a4a
	; Conference Date: org.apache.xalan.xsltc.dom.DOMAdapter@c59db19
	Through org.apache.xalan.xsltc.dom.DOMAdapter@5f3f4ca4; Conference
	Code:62498},
  abbrev_source_title = {Proc. IASTED Internat. Conf. Softw. Eng. Appl.},
  abstract = {In the current world all software projects are under constant pressure
	to improve the quality of their products. Testing practices used
	to assess the product play a key role in influencing the quality.
	Recent results show that the popularity of the agile processes like
	XP is growing. Since XP is people-oriented (unlike other software
	development methods that are either process or product-oriented)
	there is a sudden surge in the confidence levels of customers and
	programmers. Our contributions in this paper are: (1) To identify
	the extremes to which methods like XP can go to handle the testing
	phases. Testing starts early in XP projects. Design, implementation
	and testing all happen together under incremental development. (2)
	To systematically analyse how the testing practices help specifically
	to improve the product quality. (3) To identify software product
	quality assessment methods in XP projects and relate product quality
	factors to product quality metrics with respect to XP practices.
	Through our approach we investigate the benefits of XP methodology
	and its capacity to deliver high quality software through its testing
	practices especially in small-scale software companies.},
  affiliation = {Ctr. Dependable Software Eng./Train., Sch. of Info. Technol./Comp.
	Science, University of Wollongong, Australia},
  author_keywords = {Agile Software Development and Extreme Programming (XP); Software
	Quality; Software Testing},
  correspondence_address1 = {Nagarajan, S.V.; Ctr. Dependable Software Eng./Train., Sch. of Info.
	Technol./Comp. Science, University of Wollongong, Wollongong, NSW,
	Australia; email: svn95@uow.edu.au},
  document_type = {Conference Paper},
  isbn = {0889863946},
  journal = {Proceedings of the IASTED International Conference on Software Engineering
	and Applications},
  keywords = {Codes (symbols); Computer programming; Computer testing; Fault tolerant
	computer systems; Product design; Product development; Project management;
	Risk assessment, Agile software development and extreme programming
	(XP); Software quality; Software testing, Software engineering},
  language = {English},
  references = {(2003) Test-driven Management: A Key to XP Success, , http://www.cutter.com/summit/Workshop04.html,
	04/03/; Nagarajan, S.V., Garcia, O., Croll, P., Software Quality
	Issues in Extreme Programming (2003) 21" IASTED International Multi-Conference
	on Applied Informatics -AI 2003, IASTED International Conference
	on Software Engineering (SE"2003), , Innsbruck, Austria, Feb. 10-13;
	(2002) XP Questions and Answers, , www.xprogramming.com/qa/xp_q_and_a_QA.htm,
	dated 07/10/; Jeffries, R.E., Extreme Testing- Why aggressive software
	development calls for radical testing efforts (1999) Software Testing
	and Quality Engineering Magazine, pp. 23-26. , March-April; Paulk,
	N.C., Extreme programming from a CMM perspective (2001) IEEE Software,
	18 (6), pp. 19-26. , Nov - Dec; Glass, R.L., Extreme programming:
	The good, the bad, and the bottom line (2000) IEEE Software, 18 (6),
	pp. 111-112. , Nov -Dec; Beck, K., Embracing change with extreme
	programming (1999) Computer, 32 (10), pp. 70-77. , Oct; Martin, R.C.,
	(2003) Agile Software Development Principles, Patterns and Practices,
	pp. 23-29. , Prentice-Hall; Beck, K., Aim, fire [test-first coding]
	(2001) IEEE Software, 18 (5), pp. 87-89. , Sept.-Oct; Cripin, L.,
	Extreme Rules of the Road-how a tester can steer an extreme programming
	project towards success (2001) Software Testing and Quality Engineering
	Magazine, pp. 24-29. , July/August; (2002) Code the Unit Test First,
	, www.extremeprogramming.org/rules/testfirst.html, 19/07/; (2002)
	Cigital Labs Research Resources - Testability, , http://www.cigitallabs.com/resnurces/definitions/testability.html,
	dated 26/04/; Osterweil, L., Strategic directions in software quality
	(1996) ACM Computing Surveys, 28 (4), pp. 738-750. , Dec; Baker Jr.,
	R.A., Code Reviews enhance software quality Proc. Of International
	Software Engineering, ICSE 97, pp. 570-571; Ohba, M., Software quality
	=test accuracy X test coverage, IPS-J (1981) Proc. WGSE Meeting,
	21; (2002) Software Quality Metrics for Object-Oriented System Environments,
	, http://ourworld.coinpuserve.com/homepages/qualazur/~swmesu2.htm,
	dated 22/10/; (2002) Software Metrics Collection Techniques for Product
	Assessment, , www.comp.nus.edu.sg/~wanghao/ic52a5._1.htm, dated 22/10/;
	Dzida, W., Herda, S., Itzfeldt, W.D., User-perceived quality of interactive
	systems (1978) Proc. Of the 3 rd International Conference on Software
	Engineering, pp. 188-195. , May; Pfleeger, S.L., (2002) Software
	Quality - Measuring Software Quality to Support Testing, , www.acm.org/pubs/articles/journals/drdrobbs/1998/98003/9803b/9803.htm,
	08/03/; (2002) Cutter Consortium XP Survey Results, , www.cutter.com/consortium/Press/010815.html,
	dated 25/10/},
  source = {Scopus},
  sponsors = {IASTED, Technical Committee on Software Engineering},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-1542433701&partnerID=40&md5=85f25ff79f9fb7c40ae94ec58cbdf246}
}

@CONFERENCE{Seikola2011321,
  author = {Seikola, M. and Loisa, H.-M. and Jagos, A.},
  title = {Kanban implementation in a telecom product maintenance},
  year = {2011},
  pages = {321-329},
  address = {Oulu},
  note = {cited By (since 1996)1; Conference of org.apache.xalan.xsltc.dom.DOMAdapter@2e888ff7
	; Conference Date: org.apache.xalan.xsltc.dom.DOMAdapter@7a3b8ff
	Through org.apache.xalan.xsltc.dom.DOMAdapter@dc67144; Conference
	Code:87477},
  abbrev_source_title = {Proc. - EUROMICRO Conf. Softw. Eng. Adv. Appl., SEAA},
  abstract = {Telecom Product Maintenance at two Ericsson R&D Centers implemented
	Kanban. The third level maintenance is performed by the Customer
	Support Request (CSR) teams and by the design maintenance teams,
	which are located in two sites. There are separate backlogs for the
	customer support and for the design maintenance in the primary site
	and a third backlog for the design maintenance in the secondary site.
	Pull mindset, team working, team empowerment, and continuous improvement
	have become part of the everyday activities. Best practices from
	Scrum have been selected to complement the Kanban implementation.
	Also, the metrics have been reviewed. The major challenges have been
	related to the boundary rules, for instance, multi-site working,
	the platform dependency and the service level agreements but also
	to the roles and responsibilities. The Kanban boards and the chosen
	practices have been adjusted as the understanding of Lean has increased.
	This industry paper presents the journey to Lean product maintenance
	including the identification of the key success factors that are
	to some extent generalizable. First, the overall implementation is
	discussed followed by a deeper description of the implementation
	both in the CSR handling and in the Fault Handling (design maintenance)
	including also the experiences from the secondary R&D site. The paper
	continues by discussing the identified challenges and positive effects.
	At the end of the paper, the implementation concepts and key success
	factors are stated. Â© 2011 IEEE.},
  affiliation = {Team Coach, United States},
  art_number = {6068363},
  author_keywords = {Agile; Customer Support; Design Maintenance; Kanban; Lean; Multi-site},
  correspondence_address1 = {Seikola, M.; Team CoachUnited States; email: marko.seikola@ericsson.com},
  document_type = {Conference Paper},
  doi = {10.1109/SEAA.2011.56},
  file = {:Desktop\\Dropbox\\UQasar\\Agile Metric SLR\\Eetu\\Articles\\storage\\XTCHF53B\\Seikola et al. - 2011 - Kanban Implementation in a Telecom Product Mainten.pdf:PDF},
  isbn = {9780769544885},
  journal = {Proceedings - 37th EUROMICRO Conference on Software Engineering and
	Advanced Applications, SEAA 2011},
  keywords = {Agile; Customer support; Kanban; Lean; Multi-site, Customer satisfaction;
	Design; Maintainability; Sales; Software engineering, Computer software
	maintenance},
  language = {English},
  references = {Anderson, D.J., (2009) The Kanban Primer, pp. 84-90. , Better Software,
	January/February; Kniberg, H., Skarin, M., (2010) Kanban and Scrum
	- Making the Most of Both, , InfoQ; Poppendieck, M., Poppendieck,
	T., (2003) Lean Software Development - An Agile Toolkit, , Addison
	Wesley; Paasivaara, M., Durasiewicz, S., Lassenius, C., Using Scrum
	in Distributed Agile Development: A Multiple Case Study 2009 Fourth
	IEEE International Conference on Global Software Engineering, pp.
	195-204. , DOI 10.1109/ICGSE.2009.27},
  source = {Scopus},
  sponsors = {The Finnish Funding Agency for Technology and Innovation (Tekes);
	Cloud Softw. Program (www.cloudsoftwareprogram.org) Tivit Oy; Univ.
	Oulu Dep. Inf. Process. Sci.},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-82955234100&partnerID=40&md5=b9c11760d8c68fdf34fa2ac9f474d46e}
}

@ARTICLE{Staron20113,
  author = {Staron, M.a and Meding, W.b },
  title = {Monitoring bottlenecks in agile and lean software development projects
	- A method and its industrial use},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2011},
  volume = {6759 LNCS},
  pages = {3-16},
  note = {cited By (since 1996)1; Conference of org.apache.xalan.xsltc.dom.DOMAdapter@6a715829
	; Conference Date: org.apache.xalan.xsltc.dom.DOMAdapter@37532257
	Through org.apache.xalan.xsltc.dom.DOMAdapter@32f39a21; Conference
	Code:85545},
  abbrev_source_title = {Lect. Notes Comput. Sci.},
  abstract = {In the face of growing competition software projects have to deliver
	software products faster and with better quality - thus leaving little
	room for unnecessary activities or non-optimal capacity. To achieve
	the desired high speed of the projects and the optimal capacity,bottlenecks
	existing in the projects have to be monitored and effectively removed.
	The objective of this research is to show experiences from a mature
	software development organization working according to Lean and Agile
	software development principles. By conducting a formal case study
	at Ericsson we were able to elicit and automate measures required
	to monitor bottlenecks in software development workflow, evaluated
	in one of the projects. The project developed software for one of
	the telecom products and consisted of over 80 developers. The results
	of the case study include a measurement system with a number of measures/indicators
	which can indicate existence of bottlenecks in the flow of work in
	the project and a number of good practices helping other organizations
	to start monitoring bottlenecks in an effective way - in particular
	what to focus on when designing such a measurement system. Â© 2011
	Springer-Verlag.},
  address = {Torre Canne},
  affiliation = {Department of Computer Science and Engineering, University of Gothenburg,
	Sweden; Ericsson SW Research, Ericsson AB, Sweden},
  correspondence_address1 = {Staron, M.; Department of Computer Science and Engineering, University
	of GothenburgSweden; email: miroslaw.staron@ituniv.se},
  document_type = {Conference Paper},
  doi = {10.1007/978-3-642-21843-9_3},
  isbn = {9783642218422},
  issn = {03029743},
  keywords = {Agile software development; Ericsson; Good practices; Industrial use;
	Measurement system; Non-optimal capacity; Optimal capacity; Software
	development organizations; Software development projects; Software
	products; Software project; TeleCOM, Agile manufacturing systems;
	Automation; Formal methods; Industrial applications; Monitoring;
	Optimization; Research, Software design},
  language = {English},
  references = {Staron, M., A method for forecasting defect backlog in large streamline
	software development projects and its industrial evaluation (2010)
	Information and Software Technology, 52, pp. 1069-1079; Mehta, M.,
	Providing value to customers in software development through lean
	principles (2008) Software Process: Improvement and Practice, 13,
	pp. 101-109; Tomaszewski, P., From Traditional to Streamline Development
	- Opportunities and Challenges (2007) Software Process Improvement
	and Practice, 2007, pp. 1-20; Petersen, K., Wohlin, C., Measuring
	the flow in lean software development (2010) Software: Practice and
	Experience, , n/a-n/a; Oppenheim, B.W., Lean product development
	flow (2004) Syst. Eng., 7, p. 2; HÃ¶st, M., Exploring bottlenecks
	in market-driven requirements management processes with discrete
	event simulation (2001) Journal of Systems and Software, 59, pp.
	323-332; Jasmine, K.S., Vasantha, R., Identification of Software
	Performance Bottleneck Components in Reuse based Software Products
	with the Application of Acquaintanceship Graphs (2007) International
	Conference on Software Engineering Advances, ICSEA 2007, p. 34; Dettmer,
	H.W., (1997) Goldratt's Theory of Constraints: A Systems Approach
	to Continuous Improvement, , ASQC Quality Press, Milwaukee; Dettmer,
	H.W., (2007) The Logical Thinking Process: A Systems Approach to
	Complex Problem Solving, , ASQ Quality Press, Milwaukee; Perera,
	G.I.U.S., Fernando, M.S.D., Enhanced agile software development -
	Hybrid paradigm with LEAN practice (2007) International Conference
	on Industrial and Information Systems (ICIIS), pp. 239-244; Akg,
	A.E., Antecedents and consequences of team potency in software development
	projects (2007) Inf. Manage., 44, pp. 646-656; Liker, J.K., (2004)
	The Toyota Way: 14 Management Principles from the World's Greatest
	Manufacturer, , McGraw-Hill, New York; Staron, M., A Framework for
	Developing Measurement Systems and Its Industrial Evaluation (2008)
	Information and Software Technology, 51, pp. 721-737; Staron, M.,
	Meding, W., Predicting Weekly Defect Inflow in Large Software Projects
	based on Project Planning and Test Status (2007) Information and
	Software Technology, , available online; Staron, M., Meding, W.,
	Using Models to Develop Measurement Systems: A Method and Its Industrial
	Use (2009) Software Process and Product Measurement, , Presented
	at the Amsterdam, NL; Dolcemascolo, D., (2006) Improving the Extended
	Value Stream: Lean for the Entire Supply Chain, , Productivity Press,
	New York; (2007) ISO/IEC 15939 Software Engineering - Software Measurement
	Process, , International Standard Organization and International
	Electrotechnical Commission, International Standard Organization/International
	Electrotechnical Commission, Geneva; Meding, W., Staron, M., The
	Role of Design and Implementation Models in Establishing Mature Measurement
	Programs Nordic Workshop on Model Driven Engineering, Tampere, Finland
	(2009), , Presented at the; Wohlin, C., (2000) Experimentation in
	Software Engineering: An Introduction, , Kluwer Academic Publisher,
	Boston},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79960204976&partnerID=40&md5=6daccbcdd4087a89bd08a329879ed0d2}
}

@CONFERENCE{Tudor2006367,
  author = {Tudor, D.a and Walter, G.A.b },
  title = {Using an agile approach in a large, traditional organization},
  year = {2006},
  volume = {2006},
  pages = {367-373},
  address = {Minneapolis, MN},
  note = {cited By (since 1996)3; Conference of org.apache.xalan.xsltc.dom.DOMAdapter@7776d709
	; Conference Date: org.apache.xalan.xsltc.dom.DOMAdapter@1b1fcd25
	Through org.apache.xalan.xsltc.dom.DOMAdapter@44d5460c; Conference
	Code:69553},
  __markedentry = {[ekupiain:1]},
  abbrev_source_title = {Proc. AGILE Conf.},
  abstract = {Can Agile approaches be used successfully in large organizations,
	where traditional methods and high levels of governance are the norm?
	Although the iterative, agile approaches have been seen to work well
	in small, flexible organizations, or on smaller projects, they frequently
	fall foul of the larger organization's need for governance, investment
	appraisal and control. Formed in 1967, OCLC develops software for
	use by libraries and their users, museums, and academic institutions.
	Researchers, students, faculty, scholars, professional librarians
	and other information seekers use OCLC services to obtain bibliographic,
	abstract and full-text information. OCLC aims to be the leading global
	library cooperative. More than 54,000 libraries in 96 countries and
	territories around the world use OCLC services to locate, acquire,
	catalog, lend and preserve library materials. This paper examines
	how TCC, a training and consultancy company from Cheshire, England
	has worked with OCLC, the Online Computer Library Center based in
	Dublin, Ohio to incorporate the Dynamic Systems Development Method
	(DSDM) into a development culture that was deeply-rooted in "traditional"
	software development methods. Examples from multiple projects illustrate
	how the adoption of DSDM helped OCLC change its culture and achieve
	success in software development and deployment. OCLC's TLC dashboard
	was used to track the effectiveness of the development cycle, and
	to collect metrics from 2003 to the present. We discuss some of the
	challenges we faced and the six agile steps to success. Â© 2006 IEEE.},
  affiliation = {TCC, Sandbach, Cheshire, United Kingdom; OCLC Online Computer Library
	Center, Inc., Dublin, OH, United States},
  art_number = {1667600},
  correspondence_address1 = {Tudor, D.; TCC, Sandbach, Cheshire, United Kingdom; email: dottudor@tcc-nct.com},
  document_type = {Conference Paper},
  doi = {10.1109/AGILE.2006.60},
  file = {:Desktop\\Dropbox\\UQasar\\Agile Metric SLR\\Eetu\\Articles\\storage\\HMD2GZH9\\Tudor and Walter - 2006 - Using an agile approach in a large, traditional or.pdf:PDF},
  isbn = {0769525628; 9780769525624},
  journal = {Proceedings - AGILE Conference, 2006},
  keywords = {Academic institutions; Full-text information; Global library cooperative,
	Information services; Investments; Iterative methods; Project management;
	Societies and institutions; Software engineering, Agile manufacturing
	systems},
  language = {English},
  references = {The DSDM Consortium, , www.dsdm.org; The DSDM Framework, , www.dsdm.org;
	The DSDM Student Workbook IJ and DJ Tudor Galatea 2002 ISBN 0-9543071-0-0Rapid
	Application Development J Martin Maxwell/Macmillan1991 ISBN 0-020376775-8Team
	Roles at Work R M Belbin, Butterworth-Heinemann, 1993 ISBN 0-7506-0925-7The
	Dynamic Systems Development Method & TickIT ISBN: 0 580 27081 5},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-34247584196&partnerID=40&md5=4d6472181509fa76ce09f76a5e443480}
}

